From 87982b5663bb9feda6704d99f6e3ca48e5996091 Mon Sep 17 00:00:00 2001
From: Branden Archer <brarcher@google.com>
Date: Tue, 14 Apr 2020 22:40:25 -0700
Subject: [PATCH] Dump synthetic password related keys

The change relates to NIAP certification testing. This
should not be committed, as it should only be used in
one-off builds for testing.

Bug:133426426

Test: Created a lock screen password, observed keys dumped to logs
      from keystore and SyntheticPasswordManager
Change-Id: I33f0c4a392997875de44b0fd7df54155c986d55b
---
 .../server/locksettings/SyntheticPasswordManager.java    | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/locksettings/SyntheticPasswordManager.java b/services/core/java/com/android/server/locksettings/SyntheticPasswordManager.java
index a33833fd9e1c..ebe0151331f6 100644
--- a/services/core/java/com/android/server/locksettings/SyntheticPasswordManager.java
+++ b/services/core/java/com/android/server/locksettings/SyntheticPasswordManager.java
@@ -35,6 +35,7 @@ import android.security.Scrypt;
 import android.service.gatekeeper.GateKeeperResponse;
 import android.service.gatekeeper.IGateKeeperService;
 import android.util.ArrayMap;
+import android.util.Log;
 import android.util.Slog;
 
 import com.android.internal.annotations.VisibleForTesting;
@@ -60,7 +61,6 @@ import java.util.NoSuchElementException;
 import java.util.Objects;
 import java.util.Set;
 
-
 /**
  * A class that maintains the wrapping of synthetic password by user credentials or escrow tokens.
  * It's (mostly) a pure storage for synthetic passwords, providing APIs to creating and destroying
@@ -1003,6 +1003,9 @@ public class SyntheticPasswordManager {
 
         byte[] pwdToken = computePasswordToken(credential, pwd);
 
+        String hexPwdToken = String.valueOf(HexEncoding.encode(pwdToken));
+        Log.i(TAG, "CKM.4.1 pwdToken " + hexPwdToken);
+
         final byte[] applicationId;
         final long sid;
         int weaverSlot = loadWeaverSlot(handle, userId);
@@ -1133,6 +1136,8 @@ public class SyntheticPasswordManager {
 
     private AuthenticationToken unwrapSyntheticPasswordBlob(long handle, byte type,
             byte[] applicationId, long sid, int userId) {
+        String hexApplicationId = String.valueOf(HexEncoding.encode(applicationId));
+        Log.i(TAG, "CKM.4.2 applicationId " + hexApplicationId);
         byte[] blob = loadState(SP_BLOB_NAME, handle, userId);
         if (blob == null) {
             return null;
@@ -1166,6 +1171,8 @@ public class SyntheticPasswordManager {
             }
             result.recreateFromEscrow(secret);
         } else {
+            String hexSyntheticPassword = String.valueOf(HexEncoding.encode(secret));
+            Log.i(TAG, "CKM.4.3 synthetic password " + hexSyntheticPassword);
             result.recreateDirectly(secret);
         }
         if (version == SYNTHETIC_PASSWORD_VERSION_V1) {
-- 
2.28.0.236.gb10cc79966-goog
